# -*- coding: utf-8 -*-
"""Copper Returns and Company Equity Performance

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vco966m5_lHywePVsHzeH5Q_Ei7aYf7T
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

# Import Datasets

copper = pd.read_csv("/content/Copper_data.csv")
anglo = pd.read_csv("/content/AAL Historical Data (1).csv")
rio_tinto = pd.read_csv("/content/RIO Historical Data.csv")
bhp = pd.read_csv("/content/BHP Historical Data (1).csv")
freeport = pd.read_csv("/content/FCX Historical Data.csv")
first_quantum = pd.read_csv("/content/FQVLF Historical Data.csv")
zijing = pd.read_csv("/content/Zijing Mining Historical Data.csv")
glencore = pd.read_csv("/content/GLEN Historical Data.csv")

glencore.head()

copper["returns (%)"] = copper["close"].pct_change().round(decimals=4)
copper["returns (%)"] = copper["returns (%)"] * 100
copper.head()

copper = copper.sort_values(by="date", ascending=False)
copper.reset_index(drop=True, inplace=True)
copper.head()

freeport.head()

for df in [anglo, rio_tinto, bhp, zijing, first_quantum, freeport, glencore]:
  df["Date"] = pd.to_datetime(df["Date"], format="%m/%d/%Y")
  df.rename(columns = {"Date": "date", "Change %": "returns (%)"}, inplace=True)
  df.drop(columns=["Price", "Open", "High", "Low", "Vol."], inplace=True)
  df["returns (%)"] = df["returns (%)"].str.replace("%", "")
  df["returns (%)"] = df["returns (%)"].str.replace(",", "")
  df["returns (%)"] = df["returns (%)"].astype(float)

copper.drop(columns=["open", "high", "low", "close", "volume"], inplace=True)
copper.rename(columns={"returns (%)": "copper_returns"}, inplace=True)
copper.head()

import seaborn as sns

plt.figure(figsize=(8,6))
sns.histplot(copper["copper_returns"], kde=True, bins=10)
plt.title("Copper Returns Distribution")
plt.xlabel("Copper Returns (%)")
plt.ylabel("Frequency")
plt.show()

df_list = {
    "anglo": anglo,
    "rio_tinto": rio_tinto,
    "bhp": bhp,
    "zijin": zijing,
    "first_quantum": first_quantum,
    "freeport": freeport,
    "glencore": glencore
}

for name, df in df_list.items():
    df.rename(columns={"returns (%)": f"{name}_returns (%)", "Date": "date"}, inplace=True)

fig, axes = plt.subplots(4, 2, figsize=(12, 8))
axes = axes.flatten()

for ax, (name, df) in zip(axes, df_list.items()):
    sns.histplot(df[f"{name}_returns (%)"], kde=True, ax=ax, bins=20)
    ax.set_title(f"Distribution of {name.capitalize()} Returns")
    ax.tick_params(axis="x", rotation=45, labelsize=10)
    ax.set_xlabel("Returns (%)", fontsize=12)
    ax.set_ylabel("Frequency", fontsize=12)

plt.tight_layout()
plt.show()

anglo["anglo_returns (%)"].describe()

"""**OUTLIER FOR ANGLO AMERICAN**

I have realized that my data source (investing.com) incorrectly added data for the 31/08/2009 and this has impacted the data. I will adjust accordingly.
"""

anglo = anglo[(anglo["date"] != "2009-08-31") & (anglo["date"] != "2009-09-01")]
anglo["anglo_returns (%)"].describe()

plt.figure(figsize=(8,6))
sns.histplot(anglo["anglo_returns (%)"], kde=True, bins=10)
plt.title("Anglo Returns Distribution")
plt.xlabel("Anglo American Returns (%)")
plt.ylabel("Frequency")
plt.show()

"""**HEADER WILL FIX LATER**

BHP, Rio Tinto, Anglo American and Freeport all have equities data going back as far as the start date for data collected on copper futures. So I will group these 4 companies together as group 1 in comparison with the copper returns.

Glencore, Zinjing and First Quantum went on the market in 2011, 2011 and 2001 respectively and will be analysed individually.
"""

copper["date"] = pd.to_datetime(copper["date"])

# Merging the Group 1 DFs

group_one = copper

group_one = group_one.merge(anglo, on="date", how="left")
group_one = group_one.merge(bhp, on="date", how="left")
group_one = group_one.merge(freeport, on="date", how="left")
group_one = group_one.merge(rio_tinto, on="date", how="left")

group_one.sample(20)

# Copper and Glencore

cutoff_glen = pd.to_datetime("2011-05-20")

copper_glencore = copper[copper["date"] >= cutoff_glen]
copper_glencore = copper_glencore.merge(glencore, on="date", how="left")
copper_glencore.sample(20)

# Copper and First Quantum

cutoff_fq = pd.to_datetime("2001-07-12")

fq = copper[copper["date"] >= cutoff_fq]
fq = fq.merge(first_quantum, on="date", how="left")
fq.sample(20)

# Copper and Zijing

cutoff_zinjing = pd.to_datetime("2011-03-23")

copper_z = copper[copper["date"] >= cutoff_zinjing]
copper_z = copper_z.merge(zijing, on="date", how="left")
copper_z.sample(20)

# Group One Correlation

group_one_corr = group_one.corr()

sns.set(style="white")
plt.figure(figsize=(8,6))
sns.heatmap(group_one_corr, annot=True, fmt=".2f", cmap="coolwarm", cbar=True, square=True)
plt.title("Correlation between Copper Returns and Group One Equity Returns")
plt.show()

plt.figure(figsize=(12, 12))

# BHP vs Copper
plt.subplot(4, 2, 1)
sns.scatterplot(group_one, x="copper_returns", y="bhp_returns (%)")
plt.title("BHP vs. Copper")

# Rio Tinto vs Copper
plt.subplot(4, 2, 2)
sns.scatterplot(group_one, x="copper_returns", y="rio_tinto_returns (%)")
plt.title("Rio Tinto vs. Copper")

# Anglo vs Copper
plt.subplot(4, 2, 3)
sns.scatterplot(group_one, x="copper_returns", y="anglo_returns (%)")
plt.title("Anglo vs. Copper")

# Freeport vs Copper
plt.subplot(4, 2, 4)
sns.scatterplot(group_one, x="copper_returns", y="freeport_returns (%)")
plt.title("Freeport vs. Copper")

# Glencore vs Copper
plt.subplot(4, 2, 5)
sns.scatterplot(copper_glencore, x="copper_returns", y="glencore_returns (%)")
plt.title("Glencore vs. Copper")

# First Quantum vs Copper
plt.subplot(4, 2, 6)
sns.scatterplot(fq, x="copper_returns", y="first_quantum_returns (%)")
plt.title("First Quantum vs. Copper")

# Zijing vs Copper
plt.subplot(4, 2, 7)
sns.scatterplot(copper_z, x="copper_returns", y="zijin_returns (%)")
plt.title("Zijing vs. Copper")

plt.tight_layout()
plt.show()

glencore_corr = copper_glencore.corr()
print(glencore_corr)

zijing_corr = copper_z.corr()
print(zijing_corr)

fq_corr = fq.corr()
print(fq_corr)

"""**CONCLUSION**

- Nothing really sticks out when analyzing the historical performance of the stock of the top copper mining companies and the returns on copper futures.
- There is a positive relationship but it is not very strong. Most being between 0.45 and 0.5 correlation coefficient. Except Zijing at 0.23 (weak).
- Might be beneficial to follow the likes of Glencore, Freeport and First Quantum in smaller timeframes (weeks, months)
"""

cut_date_24 = pd.to_datetime("2024-01-01")

glencore_2024 = copper_glencore[copper_glencore["date"] >= cut_date_24].copy()
g1_2024 = group_one[group_one["date"] >= cut_date_24].copy()
fq_2024 = fq[fq["date"] >= cut_date_24].copy()

plt.figure(figsize=(12, 12))

# BHP vs Copper 2024
plt.subplot(4, 2, 1)
sns.scatterplot(g1_2024, x="copper_returns", y="bhp_returns (%)")
plt.title("BHP vs. Copper 2024")

# Rio Tinto vs Copper 2024
plt.subplot(4, 2, 2)
sns.scatterplot(g1_2024, x="copper_returns", y="rio_tinto_returns (%)")
plt.title("Rio Tinto vs. Copper 2024")

# Anglo vs Copper 2024
plt.subplot(4, 2, 3)
sns.scatterplot(g1_2024, x="copper_returns", y="anglo_returns (%)")
plt.title("Anglo vs. Copper 2024")

# Freeport vs Copper 2024
plt.subplot(4, 2, 4)
sns.scatterplot(g1_2024, x="copper_returns", y="freeport_returns (%)")
plt.title("Freeport vs. Copper 2024")

# Glencore vs Copper 2024
plt.subplot(4, 2, 5)
sns.scatterplot(glencore_2024, x="copper_returns", y="glencore_returns (%)")
plt.title("Glencore vs. Copper 2024")

# First Quantum vs Copper 2024
plt.subplot(4, 2, 6)
sns.scatterplot(fq_2024, x="copper_returns", y="first_quantum_returns (%)")
plt.title("First Quantum vs. Copper 2024")


plt.tight_layout()
plt.show()

"""**FREEPORT AND GLENCORE IN 2024**

Freeport and Glencore equity performance has the strongest relationship with copper returns for the year 2024.
- Freeport: 0.61 correlation score
- Glencore: 0.56 correlation score
"""